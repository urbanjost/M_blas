$BLOCK COMMENT --file drotm.3m_blas.man
NAME
   drotm(3f) - [BLAS:SINGLE_BLAS_LEVEL1] Apply the Modified Givens
   Transformation, H, to the 2 by N matrix

SYNOPSIS
    SUBROUTINE DROTM(N,DX,INCX,DY,INCY,DPARAM)

      .. Scalar Arguments ..
      INTEGER,intent(in)             :: INCX,INCY,N
      ..
      .. Array Arguments ..
      DOUBLE PRECISION,intent(in)    :: DPARAM(5)
      DOUBLE PRECISION,intent(inout) :: DX(*),DY(*)
      ..

DEFINITION

    Apply the Modified Givens Transformation, H, to the 2 by N matrix

    (DX**T) , where **T indicates transpose. the elements of DX are in
    (DY**T)

    DX(LX+I*INCX), I = 0 to N-1, where LX = 1 if INCX .ge. 0, else
    LX = (-INCX)*N, and similarly for SY using LY and INCY.
    with DPARAM(1)=DFLAG, H has one of the following forms..

       DFLAG=-1.D0     DFLAG=0.D0        DFLAG=1.D0     DFLAG=-2.D0

         (DH11  DH12)    (1.D0  DH12)    (DH11  1.D0)    (1.D0  0.D0)
       H=(          )    (          )    (          )    (          )
         (DH21  DH22),   (DH21  1.D0),   (-1.D0 DH22),   (0.D0  1.D0).

    SEE DROTMG FOR A DESCRIPTION OF DATA STORAGE IN DPARAM.
 
OPTIONS
  N
         number of elements in input vector(s)
  DX
          DX is DOUBLE PRECISION array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
 
  INCX
         storage spacing between elements of DX
 
  DY
          DY is DOUBLE PRECISION array, dimension ( 1 + ( N - 1 )*abs( INCY ) )
  INCY
         storage spacing between elements of DY
 
  DPARAM
          array, dimension (5)

           DPARAM(1)=DFLAG
           DPARAM(2)=DH11
           DPARAM(3)=DH21
           DPARAM(4)=DH12
           DPARAM(5)=DH22
 
AUTHORS

+ Univ. of Tennessee
+ Univ. of California Berkeley
+ Univ. of Colorado Denver
+ NAG Ltd.

 date:November 2017

 \ingroup double_blas_level1

SEE ALSO
   Online html documentation available at
   http://www.netlib.org/lapack/explore-html/
$BLOCK END
!  =====================================================================
       SUBROUTINE DROTM(N,DX,INCX,DY,INCY,DPARAM)
      implicit none
!
!  -- Reference BLAS level1 routine (version 3.8.0) --
!  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
!  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
!     November 2017
!
!     .. Scalar Arguments ..
      INTEGER,intent(in)             :: INCX,INCY,N
!     ..
!     .. Array Arguments ..
      DOUBLE PRECISION,intent(in)    :: DPARAM(5)
      DOUBLE PRECISION,intent(inout) :: DX(*),DY(*)
!     ..
!
!  =====================================================================
!
!     .. Local Scalars ..
      DOUBLE PRECISION DFLAG,DH11,DH12,DH21,DH22,W,Z
      INTEGER I,KX,KY,NSTEPS
!     ..
      doubleprecision,parameter :: zero=0.0d0
      doubleprecision,parameter :: two=2.0d0
!     ..
!
      DFLAG = DPARAM(1)
      IF (N.LE.0 .OR. (DFLAG+TWO.EQ.ZERO)) RETURN
      IF (INCX.EQ.INCY.AND.INCX.GT.0) THEN
!
         NSTEPS = N*INCX
         IF (DFLAG.LT.ZERO) THEN
            DH11 = DPARAM(2)
            DH12 = DPARAM(4)
            DH21 = DPARAM(3)
            DH22 = DPARAM(5)
            DO I = 1,NSTEPS,INCX
               W = DX(I)
               Z = DY(I)
               DX(I) = W*DH11 + Z*DH12
               DY(I) = W*DH21 + Z*DH22
            enddo
         elseif (DFLAG.EQ.ZERO) THEN
            DH12 = DPARAM(4)
            DH21 = DPARAM(3)
            DO I = 1,NSTEPS,INCX
               W = DX(I)
               Z = DY(I)
               DX(I) = W + Z*DH12
               DY(I) = W*DH21 + Z
            enddo
         ELSE
            DH11 = DPARAM(2)
            DH22 = DPARAM(5)
            DO I = 1,NSTEPS,INCX
               W = DX(I)
               Z = DY(I)
               DX(I) = W*DH11 + Z
               DY(I) = -W + DH22*Z
            enddo
         endif
      ELSE
         KX = 1
         KY = 1
         IF (INCX.LT.0) KX = 1 + (1-N)*INCX
         IF (INCY.LT.0) KY = 1 + (1-N)*INCY
!
         IF (DFLAG.LT.ZERO) THEN
            DH11 = DPARAM(2)
            DH12 = DPARAM(4)
            DH21 = DPARAM(3)
            DH22 = DPARAM(5)
            DO I = 1,N
               W = DX(KX)
               Z = DY(KY)
               DX(KX) = W*DH11 + Z*DH12
               DY(KY) = W*DH21 + Z*DH22
               KX = KX + INCX
               KY = KY + INCY
            enddo
         elseif (DFLAG.EQ.ZERO) THEN
            DH12 = DPARAM(4)
            DH21 = DPARAM(3)
            DO I = 1,N
               W = DX(KX)
               Z = DY(KY)
               DX(KX) = W + Z*DH12
               DY(KY) = W*DH21 + Z
               KX = KX + INCX
               KY = KY + INCY
            enddo
         ELSE
             DH11 = DPARAM(2)
             DH22 = DPARAM(5)
             DO I = 1,N
                W = DX(KX)
                Z = DY(KY)
                DX(KX) = W*DH11 + Z
                DY(KY) = -W + DH22*Z
                KX = KX + INCX
                KY = KY + INCY
            enddo
         endif
      endif

      END SUBROUTINE DROTM
