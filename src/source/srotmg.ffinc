$BLOCK COMMENT --file srotmg.3m_blas.man
NAME
   srotmg(3f) - [BLAS:SINGLE_BLAS_LEVEL1] Generate a modified Given's rotation.

SYNOPSIS
    SUBROUTINE SROTMG(SD1,SD2,SX1,SY1,SPARAM)

      .. Scalar Arguments ..
      REAL,intent(inout) :: SD1,SD2,SX1
      REAL,intent(in)    :: SY1
      ..
      .. Array Arguments ..
      REAL,intent(out)   :: SPARAM(5)
      ..

DEFINITION

    Construct the modified Givens Transformation Matrix H which zeros
    the second component of the 2-vector  

     (sqrt(sd1)*sx1,sqrt(sd2)*>sy2)**t.

    with sparam(1)=sflag, H has one of the following forms..

       SFLAG=-1.E0     SFLAG=0.E0        SFLAG=1.E0     SFLAG=-2.E0
   
         (SH11  SH12)    (1.E0  SH12)    (SH11  1.E0)    (1.E0  0.E0)
       H=(          )    (          )    (          )    (          )
         (SH21  SH22),   (SH21  1.E0),   (-1.E0 SH22),   (0.E0  1.E0).

    locations 2-4 of SPARAM contain SH11,SH21,SH12, and SH22
    respectively. (values of 1.e0, -1.e0, or 0.e0 implied by the value
    of SPARAM(1) are not stored in SPARAM.)

    the values of GAMSQ and RGAMSQ set in the data statement may be
    inexact. This is OK as they are only used for testing the size of
    SD1 and SD2. All actual scaling of data is done using GAM.

OPTIONS

 SD1
 
          SD1 is REAL
 
 SD2
 
          SD2 is REAL
 
 SX1
 
          SX1 is REAL
 
  SY1
 
          SY1 is REAL
 
  SPARAM
 
          SPARAM is REAL array, dimension (5)
     SPARAM(1)=SFLAG
     SPARAM(2)=SH11
     SPARAM(3)=SH21
     SPARAM(4)=SH12
     SPARAM(5)=SH22
 
AUTHORS

+ Univ. of Tennessee
+ Univ. of California Berkeley
+ Univ. of Colorado Denver
+ NAG Ltd.

 date:November 2017

SEE ALSO
   Online html documentation available at
   http://www.netlib.org/lapack/explore-html/
$BLOCK END
!  =====================================================================
       SUBROUTINE SROTMG(SD1,SD2,SX1,SY1,SPARAM)
      implicit none
!
!  -- Reference BLAS level1 routine (version 3.8.0) --
!  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
!  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
!     November 2017
!
!     .. Scalar Arguments ..
      REAL,intent(inout) :: SD1,SD2,SX1
      REAL,intent(in)    :: SY1
!     ..
!     .. Array Arguments ..
      REAL,intent(out)   :: SPARAM(5)
!     ..
!  =====================================================================
!
!     .. Local Scalars ..
      REAL SFLAG,SH11,SH12,SH21,SH22,SP1,SP2,SQ1, SQ2,STEMP,SU
!     ..
!     .. Intrinsic Functions ..
      INTRINSIC ABS
!     ..
!     .. Data statements ..
      real,parameter :: zero=0.0e0
      real,parameter :: one=1.0e0
      real,parameter :: two=2.0e0
!
      real,parameter :: GAM=4096.E0
      real,parameter :: GAMSQ=1.67772E7
      real,parameter :: RGAMSQ=5.96046E-8
!     ..

      IF (SD1.LT.ZERO) THEN
!        GO ZERO-H-D-AND-SX1..
         SFLAG = -ONE
         SH11 = ZERO
         SH12 = ZERO
         SH21 = ZERO
         SH22 = ZERO
!
         SD1 = ZERO
         SD2 = ZERO
         SX1 = ZERO
      ELSE
!        CASE-SD1-NONNEGATIVE
         SP2 = SD2*SY1
         IF (SP2.EQ.ZERO) THEN
            SFLAG = -TWO
            SPARAM(1) = SFLAG
            RETURN
         endif
!        REGULAR-CASE..
         SP1 = SD1*SX1
         SQ2 = SP2*SY1
         SQ1 = SP1*SX1
!
         IF (ABS(SQ1).GT.ABS(SQ2)) THEN
            SH21 = -SY1/SX1
            SH12 = SP2/SP1
!
            SU = ONE - SH12*SH21
!
           IF (SU.GT.ZERO) THEN
             SFLAG = ZERO
             SD1 = SD1/SU
             SD2 = SD2/SU
             SX1 = SX1*SU
           ELSE
!            This code path if here for safety. We do not expect this
!            condition to ever hold except in edge cases with rounding
!            errors. See DOI: 10.1145/355841.355847
             SFLAG = -ONE
             SH11 = ZERO
             SH12 = ZERO
             SH21 = ZERO
             SH22 = ZERO
!
             SD1 = ZERO
             SD2 = ZERO
             SX1 = ZERO
           endif
         ELSE

            IF (SQ2.LT.ZERO) THEN
!              GO ZERO-H-D-AND-SX1..
               SFLAG = -ONE
               SH11 = ZERO
               SH12 = ZERO
               SH21 = ZERO
               SH22 = ZERO
!
               SD1 = ZERO
               SD2 = ZERO
               SX1 = ZERO
            ELSE
               SFLAG = ONE
               SH11 = SP1/SP2
               SH22 = SX1/SY1
               SU = ONE + SH11*SH22
               STEMP = SD2/SU
               SD2 = SD1/SU
               SD1 = STEMP
               SX1 = SY1*SU
            endif
         endif

!     PROCEDURE..SCALE-CHECK
         IF (SD1.NE.ZERO) THEN
            DO WHILE ((SD1.LE.RGAMSQ) .OR. (SD1.GE.GAMSQ))
               IF (SFLAG.EQ.ZERO) THEN
                  SH11 = ONE
                  SH22 = ONE
                  SFLAG = -ONE
               ELSE
                  SH21 = -ONE
                  SH12 = ONE
                  SFLAG = -ONE
               endif
               IF (SD1.LE.RGAMSQ) THEN
                  SD1 = SD1*GAM**2
                  SX1 = SX1/GAM
                  SH11 = SH11/GAM
                  SH12 = SH12/GAM
               ELSE
                  SD1 = SD1/GAM**2
                  SX1 = SX1*GAM
                  SH11 = SH11*GAM
                  SH12 = SH12*GAM
               endif
            ENDDO
         endif

         IF (SD2.NE.ZERO) THEN
            DO WHILE ( (ABS(SD2).LE.RGAMSQ) .OR. (ABS(SD2).GE.GAMSQ) )
               IF (SFLAG.EQ.ZERO) THEN
                  SH11 = ONE
                  SH22 = ONE
                  SFLAG = -ONE
               ELSE
                  SH21 = -ONE
                  SH12 = ONE
                  SFLAG = -ONE
               endif
               IF (ABS(SD2).LE.RGAMSQ) THEN
                  SD2 = SD2*GAM**2
                  SH21 = SH21/GAM
                  SH22 = SH22/GAM
               ELSE
                  SD2 = SD2/GAM**2
                  SH21 = SH21*GAM
                  SH22 = SH22*GAM
               endif
            enddo
         endif

      endif

      IF (SFLAG.LT.ZERO) THEN
         SPARAM(2) = SH11
         SPARAM(3) = SH21
         SPARAM(4) = SH12
         SPARAM(5) = SH22
      elseif (SFLAG.EQ.ZERO) THEN
         SPARAM(3) = SH21
         SPARAM(4) = SH12
      ELSE
         SPARAM(2) = SH11
         SPARAM(5) = SH22
      endif

      SPARAM(1) = SFLAG

      END SUBROUTINE SROTMG
