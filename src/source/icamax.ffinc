$BLOCK COMMENT --file icamax.3m_blas.man
NAME
   icamax(3f) -- [BLAS:AUX_BLAS] Return index of maximum "absolute value" in CX.

SYNOPSIS
    integer function icamax(n,cx,incx)

      .. scalar arguments ..
      integer,intent(in) :: incx,n
      ..
      .. array arguments ..
      complex,intent(in) :: cx(*)
      ..

DEFINITION

    ICAMAX finds the index of the first element having maximum |Re(.)| + |Im(.)|
 
OPTIONS

  N
 
          N is INTEGER
         number of elements in input vector(s)
 
  CX
 
          CX is COMPLEX array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
 
  INCX
 
          INCX is INTEGER
         storage spacing between elements of CX
 
AUTHORS

+ Univ. of Tennessee
+ Univ. of California Berkeley
+ Univ. of Colorado Denver
+ NAG Ltd.

 date:November 2017

 FURTHER DETAILS

     jack dongarra, linpack, 3/11/78.
     modified 3/93 to return if incx .le. 0.
     modified 12/3/93, array(1) declarations changed to array(*)
 
SEE ALSO
   Online html documentation available at
   http://www.netlib.org/lapack/explore-html/
$BLOCK END
!  =====================================================================
pure INTEGER FUNCTION ICAMAX(N,CX,INCX)
      implicit none
!
!  -- Reference BLAS level1 routine (version 3.8.0) --
!  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
!  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
!     November 2017
!
!     .. Scalar Arguments ..
      INTEGER,intent(in) :: INCX,N
!     ..
!     .. Array Arguments ..
      COMPLEX,intent(in) :: CX(*)
!     ..
!  =====================================================================
!     .. Local Scalars ..
      REAL SMAX
      INTEGER I,IX
!     ..
!     .. External Functions ..  REAL SCABS1
!     ..
      ICAMAX = 0
      IF (N.LT.1 .OR. INCX.LE.0) RETURN
      ICAMAX = 1
      IF (N.EQ.1) RETURN
      IF (INCX.EQ.1) THEN
!
!        code for increment equal to 1
!
         SMAX = SCABS1(CX(1))
         DO I = 2,N
            IF (SCABS1(CX(I)).GT.SMAX) THEN
               ICAMAX = I
               SMAX = SCABS1(CX(I))
            endif
         enddo
      ELSE
!
!        code for increment not equal to 1
!
         IX = 1
         SMAX = SCABS1(CX(1))
         IX = IX + INCX
         DO I = 2,N
            IF (SCABS1(CX(IX)).GT.SMAX) THEN
               ICAMAX = I
               SMAX = SCABS1(CX(IX))
            endif
            IX = IX + INCX
         enddo
      endif
end function icamax
