$BLOCK COMMENT --file zswap.3m_blas.man
NAME
   zswap(3f) - [BLAS:COMPLEX16_BLAS_LEVEL1]

SYNOPSIS
    SUBROUTINE ZSWAP(N,ZX,INCX,ZY,INCY)

      .. Scalar Arguments ..
      INTEGER,intent(in)                 :: INCX,INCY,N
      ..
      .. Array Arguments ..
      complex(kind=real64),intent(inout) :: ZX(*),ZY(*)
      ..

DEFINITION

    ZSWAP interchanges two vectors.
 
OPTIONS

  N
 
          N is INTEGER
         number of elements in input vector(s)
 
 ZX
 
          ZX is complex(kind=real64) array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
 
  INCX
 
          INCX is INTEGER
         storage spacing between elements of ZX
 
 ZY
 
          ZY is complex(kind=real64) array, dimension ( 1 + ( N - 1 )*abs( INCY ) )
 
  INCY
 
          INCY is INTEGER
         storage spacing between elements of ZY
 
AUTHORS

+ Univ. of Tennessee
+ Univ. of California Berkeley
+ Univ. of Colorado Denver
+ NAG Ltd.

 date:November 2017

 FURTHER DETAILS

     jack dongarra, 3/11/78.
     modified 12/3/93, array(1) declarations changed to array(*)
 
SEE ALSO
   Online html documentation available at
   http://www.netlib.org/lapack/explore-html/
$BLOCK END
!  =====================================================================
       SUBROUTINE ZSWAP(N,ZX,INCX,ZY,INCY)
      implicit none
!
!  -- Reference BLAS level1 routine (version 3.8.0) --
!  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
!  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
!     November 2017
!
!     .. Scalar Arguments ..
      INTEGER,intent(in)                 :: INCX,INCY,N
!     ..
!     .. Array Arguments ..
      complex(kind=real64),intent(inout) :: ZX(*),ZY(*)
!     ..
!
!  =====================================================================
!
!     .. Local Scalars ..
      complex(kind=real64) :: ZTEMP
      INTEGER I,IX,IY
!     ..
      IF (N.LE.0) RETURN
      IF (INCX.EQ.1 .AND. INCY.EQ.1) THEN
!
!       code for both increments equal to 1
         DO I = 1,N
            ZTEMP = ZX(I)
            ZX(I) = ZY(I)
            ZY(I) = ZTEMP
         enddo
      ELSE
!
!       code for unequal increments or equal increments not equal
!         to 1
!
         IX = 1
         IY = 1
         IF (INCX.LT.0) IX = (-N+1)*INCX + 1
         IF (INCY.LT.0) IY = (-N+1)*INCY + 1
         DO I = 1,N
            ZTEMP = ZX(IX)
            ZX(IX) = ZY(IY)
            ZY(IY) = ZTEMP
            IX = IX + INCX
            IY = IY + INCY
         enddo
      endif

      END SUBROUTINE ZSWAP
